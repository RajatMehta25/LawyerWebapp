{"version":3,"sources":["components/Common/Breadcrumb.js","pages/Dashboard/MiniWidgets.js","pages/Dashboard/index.js","components/Overlay.js"],"names":["Breadcrumbs","itemsLength","this","props","breadcrumbItems","length","Fragment","Row","Col","xs","className","t","title","Breadcrumb","listClassName","map","item","key","BreadcrumbItem","active","to","link","Component","withNamespaces","MiniWidgets","reports","report","md","Card","CardBody","Media","body","value","icon","StarterPage","useState","tableData","setTableData","dashData","setDashData","isLoading","setIsLoading","useEffect","getCategory","a","axios","get","data","console","log","totalRevenue","toFixed","totalRevenueFromBuyPlan","totalRevenueTemplateDownload","totalGraph","mostSoldProducts","labels","val","nameId","datasets","axis","label","total_revenue","fill","backgroundColor","borderColor","borderWidth","scaleLabel","toString","replace","total_subscription_payment","options","responsive","plugins","legend","position","display","text","scales","xAxes","ticks","yAxes","beginAtZero","userCallback","index","values","split","join","tooltips","callbacks","tooltipItems","yLabel","Container","fluid","xl","Overlay","OverWrapper","styled","div","direction","justifyContent","alignItems","viewheight","spin","keyframes","Circle","theme","primary"],"mappings":"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","file":"static/js/41.9968dfcd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport { Row, Col, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\n\r\n//i18n\r\nimport { withNamespaces } from \"react-i18next\";\r\n\r\nclass Breadcrumbs extends Component {\r\n    render() {\r\n\r\n        const itemsLength = this.props.breadcrumbItems.length;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                        <Row>\r\n                            <Col xs={12}>\r\n                                <div className=\"page-title-box d-flex align-items-center justify-content-between\">\r\n                                    <h4 className=\"mb-0\">{this.props.t(this.props.title)}</h4>\r\n\r\n                                    <div className=\"page-title-right\">\r\n                                        <Breadcrumb listClassName=\"m-0\">\r\n                                            {\r\n                                                this.props.breadcrumbItems.map((item, key) =>\r\n                                                    key+1 === itemsLength ?\r\n                                                        <BreadcrumbItem key={key} active>{this.props.t(item.title)}</BreadcrumbItem>\r\n                                                    :   <BreadcrumbItem key={key} ><Link to={item.link}>{this.props.t(item.title)}</Link></BreadcrumbItem>\r\n                                                )\r\n                                            }\r\n                                        </Breadcrumb>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withNamespaces()(Breadcrumbs);","import React, { Component } from 'react';\r\nimport { Col, Card, CardBody, Media } from \"reactstrap\";\r\n\r\nclass MiniWidgets extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                {\r\n                    this.props.reports.map((report, key) =>\r\n                                    <Col key={key} md={3}>\r\n                                        <Card>\r\n                                            <CardBody>\r\n                                                <Media>\r\n                                                    <Media body className=\"overflow-hidden\">\r\n                                                        <p className=\"text-truncate font-size-14 mb-2\">{report.title}</p>\r\n                                                        <h4 className=\"mb-0\">{report.value}</h4>\r\n                                                    </Media>\r\n                                                    <div className=\"text-primary\">\r\n                                                        <i className={report.icon + \" font-size-24\"}></i>\r\n                                                    </div>\r\n                                                </Media>\r\n                                            </CardBody>\r\n\r\n                                            <CardBody className=\"border-top py-3\">\r\n                                                {/*<div className=\"text-truncate\">\r\n                                                    <span className=\"badge badge-soft-success font-size-11 mr-1\"><i className=\"mdi mdi-menu-up\"> </i> {report.rate}</span>\r\n                                                    <span className=\"text-muted ml-2\">{report.desc}</span>\r\n                                                </div>*/}\r\n                                            </CardBody>\r\n                                        </Card>\r\n                                    </Col>\r\n                    )\r\n                }\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MiniWidgets;","import React, { Component, useEffect, useState } from \"react\";\r\nimport { Container, Row, Col } from \"reactstrap\";\r\nimport axios from \"../../axios\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\n//Import Breadcrumb\r\nimport Breadcrumbs from \"../../components/Common/Breadcrumb\";\r\n// import SalesAnalytics from \"./SalesAnalytics\";\r\nimport MiniWidgets from \"./MiniWidgets\";\r\nimport \"./dashboard.scss\";\r\nimport Overlay from \"../../components/Overlay\";\r\nimport { get } from \"lodash\"\r\n\r\nconst StarterPage = () => {\r\n  const [tableData, setTableData] = useState([]);\r\n  const [dashData, setDashData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    getCategory();\r\n  }, []);\r\n\r\n  \r\n  const getCategory = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data } = await axios.get(\"/admin/dashboard?year=2023\");\r\n      setTableData(data.data);\r\n      setDashData(data.data);\r\n      setIsLoading(false);\r\n    } catch (error) {\r\n      setIsLoading(false);\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const breadcrumbItems = [\r\n    { title: \"Thoolie\", link: \"#\" },\r\n    { title: \"Dashboard\", link: \"#\" },\r\n  ];\r\n\r\n  const reports = [\r\n    {\r\n      icon: \"ri-user-fill\",\r\n      title: \"Total Non-Subscribed User\",\r\n      value: get(tableData, \"totalNonSubscribedUser\", \"\"),\r\n    },\r\n    {\r\n      icon: \"ri-user-fill\",\r\n      title: \"Total Number Of User\",\r\n      value: get(tableData, \"totalNumberOfUsers\", \"\"),\r\n    },\r\n    {\r\n      icon: \"ri-user-fill\",\r\n      title: \"Total Revenue\",\r\n      value: `$ ${tableData.totalRevenue?.toFixed(2)||''}`,\r\n    },\r\n    {\r\n      icon: \"ri-user-fill\",\r\n      title: \"Total Revenue Subscribed Plan\",\r\n      value: `$ ${tableData.totalRevenueFromBuyPlan?.toFixed(2)||''}`,\r\n    },\r\n    {\r\n      icon: \"ri-user-fill\",\r\n      title: \"Total Revenue Template Download\",\r\n      value: `$ ${tableData.totalRevenueTemplateDownload?.toFixed(2)||''}`,\r\n    },\r\n    {\r\n      icon: \"ri-user-fill\",\r\n      title: \"Total Subscribed User\",\r\n      value: get(tableData, \"totalSubscribedUser\", \"\")\r\n    },\r\n  ];\r\n\r\n  // Graph\r\n  const { totalGraph, mostSoldProducts } = dashData;\r\n  const labels = totalGraph?.map((val) => val.nameId);\r\n  const data = {\r\n    labels: labels,\r\n    datasets: [\r\n      {\r\n        axis: \"y\",\r\n        label: \"Total Revenue\",\r\n        data: totalGraph?.map((val) => val.total_revenue),\r\n        fill: false,\r\n        backgroundColor: \"red\",\r\n        borderColor: \"red\",\r\n        borderWidth: 1,\r\n        scaleLabel: function (label) {\r\n          return (\r\n            \" $\" + label.value.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")\r\n          );\r\n        },\r\n      },\r\n      {\r\n        axis: \"y\",\r\n        label: \"Total Subscription Payment\",\r\n        data: totalGraph?.map((val) => val.total_subscription_payment),\r\n        fill: false,\r\n        backgroundColor: \"#0294b3\",\r\n        borderColor: \"#0294b3\",\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: \"top\",\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: \"Seller Chart\",\r\n      },\r\n    },\r\n    scales: {\r\n      xAxes: [\r\n        {\r\n          ticks: {},\r\n        },\r\n      ],\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            beginAtZero: true,\r\n            // Return an empty string to draw the tick line but hide the tick label\r\n            // Return `null` or `undefined` to hide the tick line entirely\r\n            userCallback: function (value, index, values) {\r\n              // Convert the number to a string and splite the string every 3 charaters from the end\r\n              value = value.toString();\r\n              value = value.split(/(?=(?:...)*$)/);\r\n\r\n              // Convert the array to a string and format the output\r\n              value = value.join(\".\");\r\n              return \"$\" + value;\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    tooltips: {\r\n      callbacks: {\r\n        label: function (tooltipItems, data) {\r\n          console.log(tooltipItems);\r\n          console.log(data);\r\n          return \"$\" + tooltipItems.yLabel.toString();\r\n        },\r\n      },\r\n      // callbacks: {\r\n      //     label: function (tooltipItems, data) {\r\n      //         console.log(tooltipItems);\r\n      //         console.log(data);\r\n      //         return \"$\" + tooltipItems.yLabel.toString() + data.datasets[1]?.label;\r\n      //     }\r\n      // },\r\n      // title:\r\n      // title:\r\n    },\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div>\r\n        <div className=\"page-content\">\r\n          <Container fluid>\r\n            <Breadcrumbs title=\"Dashboard\" breadcrumbItems={breadcrumbItems} />\r\n            <Row>\r\n              <Col xl={12}>\r\n                <Row>\r\n                  <MiniWidgets reports={reports} />\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n        <div className=\"graph-box\">\r\n          <Line options={options} data={data} />\r\n        </div>\r\n      </div>\r\n\r\n      {isLoading && <Overlay />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default StarterPage;\r\n","import React from \"react\";\r\nimport styled, { keyframes, withTheme } from \"styled-components\";\r\n\r\n\r\nconst OverWrapper = styled.div(\r\n  props => `\r\n    display: flex;\r\n    flex-direction: ${props.direction || \"column\"};\r\n    justify-content: ${props.justifyContent || \"flex-start\"};\r\n    align-items: ${props.alignItems || \"flex-start\"};\r\n    position:${props.position ? props.position : \"fixed\"} ;\r\n    width: 100%;\r\n    height: ${props.viewheight ? props.viewheight : \"fixed\"};\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color:${props.backgroundColor || \"rgba(0, 0, 0, 0.5)\"};\r\n    z-index: 9999;\r\n    cursor: pointer;\r\n`\r\n);\r\nconst spin = keyframes`\r\n0% { transform: rotate(0deg) }\r\n100% {transform: rotate(360deg) }\r\n`;\r\nconst Circle = styled.div`\r\n  border: 3px solid ${props => props.theme.primary};\r\n  border-top: 3px solid #fff;\r\n  border-radius: 50%;\r\n  margin: auto;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 0.6s linear infinite;\r\n  transition: 0.2s;\r\n`;\r\n\r\nfunction Overlay(props) {\r\n  const { position, direction, backgroundColor, viewheight } = props;\r\n  return (\r\n    <OverWrapper\r\n      position={position}\r\n      direction={direction}\r\n      backgroundColor={backgroundColor}\r\n      viewheight={viewheight}\r\n    >\r\n      <Circle />\r\n    </OverWrapper>\r\n  );\r\n}\r\n\r\nexport default Overlay;\r\n"],"sourceRoot":""}