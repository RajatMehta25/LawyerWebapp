{"version":3,"sources":["pages/FAQ_Management/FAQ_Management.js","components/Overlay.js","../node_modules/@material-ui/core/esm/Paper/Paper.js"],"names":["useStyles","makeStyles","theme","root","flexWrap","margin","spacing","extendedIcon","marginRight","paperHeading","padding","table","minWidth","textMiddle","verticalAlign","iconMargin","color","backgroundColor","iconcolor","headingButton","display","flexDirection","justifyContent","headingAlignment","alignItems","width","gap","textAlign","Marginbutton","container","maxHeight","paperPaddingRightLeft","FAQ_Management","props","classes","useState","tableData","setTableData","isLoading","setIsLoading","setButtonDisabling","storeType","setType","show","setShow","useEffect","getCategoriesContent","a","type","console","log","axios","get","data","toast","error","response","message","position","POSITION","TOP_RIGHT","handleUpdate","values","post","faqId","id","question","answer","success","handleAdd","newQuestion","newAnswer","setTimeout","handle_Deletion","Fragment","className","elevation","classNames","style","map","category","index","key","initialValues","validate","errors","onSubmit","setSubmitting","isSubmitting","setFieldValue","name","placeholder","component","value","onChange","newContent","variant","disabled","onClick","_id","OverWrapper","styled","div","direction","viewheight","spin","keyframes","Circle","primary","Overlay","Paper","React","ref","_props$component","Component","_props$square","square","_props$elevation","_props$variant","other","_objectWithoutProperties","_extends","clsx","outlined","concat","rounded","withStyles","elevations","shadows","forEach","shadow","boxShadow","palette","background","paper","text","transition","transitions","create","borderRadius","shape","border","divider"],"mappings":"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","file":"static/js/42.2120d635.chunk.js","sourcesContent":["import React, { useState, useEffect, Component, useRef, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport classNames from \"classnames\";\r\nimport axios from \"../../axios\";\r\nimport { toast } from \"react-toastify\";\r\n// import Switch from '@mui/material/Switch';\r\n// import { styled } from '@mui/material/styles';\r\n// import Skeleton from 'react-loading-skeleton'\r\n// import 'react-loading-skeleton/dist/skeleton.css'\r\nimport {\r\n  Button,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TablePagination,\r\n  Switch,\r\n  styled,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport \"./FAQ_Management.css\";\r\n// import { Delete } from '@material-ui/icons';\r\n// import VisibilityIcon from '@material-ui/icons/Visibility';\r\n// import BlockIcon from '@material-ui/icons/Block';\r\n// import ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\n\r\n// For Table\r\n// import SearchBar from \"material-ui-search-bar\";\r\n// import { orderBy } from \"lodash\";\r\n\r\n//history\r\n// import {useHistory} from 'react-router-dom'\r\n// import AddEditCategory from \"../AccountManagement/Account_Details\";\r\n\r\n// import './Category_Management.css' ;\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import { DeleteOutline, WidgetsOutlined } from \"@material-ui/icons\";\r\n// import React, { Component } from 'react';\r\n// import { Editor } from 'react-draft-wysiwyg';\r\n// import { EditorState, convertToRaw, ContentState } from 'draft-js';\r\n// import draftToHtml from 'draftjs-to-html';\r\n// import htmlToDraft from 'html-to-draftjs';\r\n// import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n// import '../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n// import QNA from \"./QNA_Component\";\r\nimport JoditEditor from \"jodit-react\";\r\nimport { Formik, Field, ErrorMessage, Form } from \"formik\";\r\nimport { get } from \"lodash\";\r\nimport Overlay from \"../../components/Overlay\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexWrap: \"wrap\",\r\n    // marginTop: '5rem',\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  paperHeading: {\r\n    padding: \"1rem 0rem\",\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  textMiddle: {\r\n    verticalAlign: \"middle !important\",\r\n  },\r\n  iconMargin: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#696969\",\r\n  },\r\n  iconcolor: {\r\n    margin: \"0.5rem\",\r\n    color: \"#fff\",\r\n    backgroundColor: \"#0294b3 !important\",\r\n  },\r\n  headingButton: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-around\",\r\n    padding: \"10px\",\r\n  },\r\n  headingAlignment: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    // padding: \"0 2rem 0 2rem\"\r\n    alignItems: \"center\",\r\n    flexWrap: \"wrap\",\r\n    [\"@media (max-width:780px)\"]: {\r\n      // eslint-disable-line no-useless-computed-key\r\n      flexDirection: \"column\",\r\n      width: \"100%\",\r\n      gap: \"1rem\",\r\n      justifyContent: \"center\",\r\n      textAlign: \"center\",\r\n    },\r\n  },\r\n  Marginbutton: {\r\n    margin: \"0.5rem\",\r\n  },\r\n  container: {\r\n    maxHeight: \"58vh\",\r\n  },\r\n  paperPaddingRightLeft: {\r\n    padding: \"0rem 1rem\",\r\n  },\r\n}));\r\n\r\nexport default function FAQ_Management(props) {\r\n  const classes = useStyles();\r\n  // const registrationForm = useRef();\r\n\r\n  const [tableData, setTableData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  // const [inputData, setInputData] = useState(\"\");\r\n  // const [inputData2, setInputData2] = useState(\"\");\r\n\r\n  // const [inputquestion, setInputquestion] = useState(\"\");\r\n  // const [inputquestion2, setInputquestion2] = useState(\"\");\r\n  const [buttonDisabling, setButtonDisabling] = useState(false);\r\n\r\n  // const [storeType, setType] = useState(\"price\");\r\n  const [storeType, setType] = useState(\"service\");\r\n\r\n  const [tabColor, setTabColor] = useState(\"1\");\r\n\r\n  const [show, setShow] = useState(true);\r\n\r\n  useEffect(() => {\r\n    getCategoriesContent();\r\n    //  setInputData2(\"\");\r\n  }, []);\r\n\r\n  //get content\r\n  const getCategoriesContent = async (type = \"service\") => {\r\n    console.log(\"type\", type);\r\n    setType(type);\r\n    setIsLoading(true);\r\n    try {\r\n      if (type === \"price\") {\r\n        setTableData([]);\r\n        const { data } = await axios.get(`/admin/get_faq_list?type=price`);\r\n        console.log(data);\r\n        setTableData(data.data);\r\n        setIsLoading(false);\r\n        setButtonDisabling(false);\r\n        // setSearchedData(data.user)\r\n        // setIsLoading(false)\r\n      } else if (type === \"service\") {\r\n        setTableData([]);\r\n        const { data } = await axios.get(`/admin/get_faq_list?type=service`);\r\n        console.log(data);\r\n        setTableData(data.data);\r\n        setIsLoading(false);\r\n        setButtonDisabling(false);\r\n        // setSearchedData(data.user)\r\n        // setIsLoading(false)\r\n      } else if (type === \"general_faq\") {\r\n        setTableData([]);\r\n        const { data } = await axios.get(`/admin/get_faq_list?type=general_faq`);\r\n        console.log(data);\r\n        setTableData(data.data);\r\n        setIsLoading(false);\r\n        setButtonDisabling(false);\r\n        // setSearchedData(data.user)\r\n        // setIsLoading(false)\r\n      } else {\r\n        setTableData([]);\r\n        const { data } = await axios.get(`/admin/get_faq_list?type=price`);\r\n        console.log(data);\r\n        setTableData(data.data);\r\n        setIsLoading(false);\r\n        setButtonDisabling(false);\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(`${error?.response?.data?.message}`, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  console.log(tableData);\r\n  const handleUpdate = async (values) => {\r\n    // console.log(category);\r\n    // if (category){\r\n    setIsLoading(true);\r\n    try {\r\n      setButtonDisabling(true);\r\n      const { data } = await axios.post(\"/admin/create_update_faq\", {\r\n        faqId: values.id,\r\n        question: values.question,\r\n        answer: values.answer,\r\n        type: storeType,\r\n      });\r\n      setIsLoading(false);\r\n      // window.location.reload();\r\n      // getCategoriesContent();\r\n      toast.success(data.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(`${error?.response?.data?.message}`, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  const handleAdd = async (values) => {\r\n    setIsLoading(true);\r\n    try {\r\n      setButtonDisabling(true);\r\n      // let panelName = \"USER\";\r\n\r\n      const { data } = await axios.post(\"/admin/create_update_faq\", {\r\n        // _id: category.data._id,\r\n        question: values.newQuestion,\r\n        answer: values.newAnswer,\r\n        type: storeType,\r\n      });\r\n      setIsLoading(false);\r\n      // window.location.reload();\r\n      getCategoriesContent(storeType);\r\n      setTimeout(() => {\r\n        setShow(true);\r\n      }, 401);\r\n      toast.success(data.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(`${error?.response?.data?.message}`, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  const handle_Deletion = async (id) => {\r\n    setIsLoading(true);\r\n    try {\r\n      const { data } = await axios.post(\"/admin/remove_faq\", {\r\n        faqId: id,\r\n      });\r\n      // window.location.reload();\r\n      setIsLoading(false);\r\n      // getCategoriesContent();\r\n      toast.success(data.message, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(`${error?.response?.data?.message}`, {\r\n        position: toast.POSITION.TOP_RIGHT,\r\n      });\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"page-content\">\r\n        <div className={classes.root}>\r\n          <Paper>\r\n            <div className={classes.paperPaddingRightLeft}>\r\n              <div className=\"py-4\">\r\n                <Paper elevation={0} className={classNames(classes.paperHeading, classes.headingAlignment)}>\r\n                  <h3 style={{}}>FAQ Management</h3>\r\n                </Paper>\r\n                {/* <Paper elevation={0}>\r\n                  <div>\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      className={`${tabColor === \"1\" ? \"customButton\" : \"defaultButton\"}`}\r\n                      onClick={() => {\r\n                        getCategoriesContent(\"price\");\r\n                        setTabColor(\"1\");\r\n                      }}\r\n                    >\r\n                      Price\r\n                    </Button>\r\n                    &emsp;\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      className={`${tabColor === \"2\" ? \"customButton\" : \"defaultButton\"}`}\r\n                      onClick={() => {\r\n                        setTabColor(\"2\");\r\n                        getCategoriesContent(\"service\");\r\n                      }}\r\n                    >\r\n                      Service\r\n                    </Button>\r\n                    &emsp;\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      className={`${tabColor === \"3\" ? \"customButton\" : \"defaultButton\"}`}\r\n                      onClick={() => {\r\n                        setTabColor(\"3\");\r\n                        getCategoriesContent(\"general_faq\");\r\n                      }}\r\n                    >\r\n                      General Service\r\n                    </Button>\r\n                  </div>\r\n                  <br />\r\n                </Paper> */}\r\n                {/* //new design */}\r\n\r\n                {/* <br /> */}\r\n\r\n                {/* status end */}\r\n\r\n                <Paper>\r\n                  {tableData.map((category, index) => (\r\n                    <Formik\r\n                      key={index}\r\n                      initialValues={{\r\n                        question: get(category, \"question\", \"\"),\r\n                        answer: get(category, \"answer\", \"\"),\r\n                        id: get(category, \"_id\", \"\"),\r\n                      }}\r\n                      validate={(values) => {\r\n                        const errors = {};\r\n                        console.log(values);\r\n                        if (!values.question) {\r\n                          errors.question = \"Required\";\r\n                        }\r\n                        if (\r\n                          //  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                          values.answer === \"\" ||\r\n                          values.answer === \"<p><br></p>\"\r\n                        ) {\r\n                          errors.answer = \"Required\";\r\n                        }\r\n                        return errors;\r\n                      }}\r\n                      onSubmit={(values, { setSubmitting }) => {\r\n                        setTimeout(() => {\r\n                          //  alert(JSON.stringify(values, null, 2));\r\n                          handleUpdate(values);\r\n                          setSubmitting(false);\r\n                        }, 400);\r\n                      }}\r\n                    >\r\n                      {({ isSubmitting, setFieldValue, values }) => (\r\n                        <Form>\r\n                          <label className=\"label-text\">QUESTION</label>\r\n                          <Field type=\"text\" name=\"question\" className=\"form-control\" placeholder=\"Question\" />\r\n                          <ErrorMessage name=\"question\" component=\"div\" className=\"text-danger\" />\r\n                          <br />\r\n                          <div className=\"editor-container-1\">\r\n                            <label className=\"label-text\">ANSWER</label>\r\n                            <JoditEditor\r\n                              value={values.answer}\r\n                              name=\"answer\"\r\n                              onChange={(newContent) => {\r\n                                // SettingData(newContent);\r\n                                setFieldValue(\"answer\", newContent);\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <ErrorMessage name=\"answer\" component=\"div\" className=\"text-danger\" />\r\n                          <br />\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            style={{\r\n                              backgroundColor: \"#0294b3\",\r\n                              color: \"white\",\r\n                            }}\r\n                            // onClick={()=>{\r\n                            //   handleCreate_Update2(category)\r\n                            // }}\r\n                            type=\"submit\"\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            Update\r\n                          </Button>\r\n                          &emsp;\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            type=\"button\"\r\n                            style={{\r\n                              backgroundColor: \"#0294b3\",\r\n                              color: \"white\",\r\n                            }}\r\n                            onClick={() => {\r\n                              handle_Deletion(category._id);\r\n                              getCategoriesContent(storeType);\r\n                            }}\r\n                          >\r\n                            Remove\r\n                          </Button>\r\n                          <br />\r\n                          <br />\r\n                        </Form>\r\n                      )}\r\n                    </Formik>\r\n                  ))}\r\n\r\n                  {show && (\r\n                    <Formik\r\n                      initialValues={{\r\n                        newQuestion: \"\",\r\n                        newAnswer: \"\",\r\n                      }}\r\n                      validate={(values) => {\r\n                        const errors = {};\r\n                        console.log(values);\r\n                        if (!values.newQuestion) {\r\n                          errors.newQuestion = \"Required\";\r\n                        }\r\n                        if (\r\n                          //  !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n                          values.newAnswer === \"\" ||\r\n                          values.newAnswer === \"<p><br></p>\"\r\n                        ) {\r\n                          errors.newAnswer = \"Required\";\r\n                        }\r\n                        return errors;\r\n                      }}\r\n                      onSubmit={(values, { setSubmitting }) => {\r\n                        setTimeout(() => {\r\n                          //  alert(JSON.stringify(values, null, 2));\r\n                          handleAdd(values);\r\n\r\n                          setSubmitting(false);\r\n                        }, 400);\r\n\r\n                        //  getCategoriesContent(storeType);\r\n                        // window.location.reload();\r\n                        setShow(false);\r\n                      }}\r\n                    >\r\n                      {({ isSubmitting, setFieldValue, values }) => (\r\n                        <Form>\r\n                          <label className=\"label-text\">QUESTION</label>\r\n                          <Field type=\"text\" name=\"newQuestion\" className=\"form-control\" placeholder=\"New Question\" />\r\n                          <ErrorMessage name=\"newQuestion\" component=\"div\" className=\"text-danger\" />\r\n                          <br />\r\n                          <div className=\"editor-container-1\">\r\n                            <label className=\"label-text\">ANSWER</label>\r\n                            <JoditEditor\r\n                              value={values.newAnswer}\r\n                              name=\"newAnswer\"\r\n                              onChange={(newContent) => {\r\n                                // SettingData(newContent);\r\n                                setFieldValue(\"newAnswer\", newContent);\r\n                              }}\r\n                            />\r\n                          </div>\r\n                          <ErrorMessage name=\"newAnswer\" component=\"div\" className=\"text-danger\" />\r\n                          <br />\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            type=\"submit\"\r\n                            // style={{ backgroundColor: `${buttonDisabling?'#696969':'#0294B3'}`, color: \"white\" }}\r\n                            // onClick={()=>{handleAdd()}}\r\n                            style={{\r\n                              backgroundColor: \"#0294b3\",\r\n                              color: \"white\",\r\n                            }}\r\n                            disabled={isSubmitting}\r\n                          >\r\n                            ADD\r\n                          </Button>\r\n                          <br />\r\n                          <br />\r\n                        </Form>\r\n                      )}\r\n                    </Formik>\r\n                  )}\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </div>\r\n      </div>\r\n      {isLoading && <Overlay />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styled, { keyframes, withTheme } from \"styled-components\";\r\n\r\n\r\nconst OverWrapper = styled.div(\r\n  props => `\r\n    display: flex;\r\n    flex-direction: ${props.direction || \"column\"};\r\n    justify-content: ${props.justifyContent || \"flex-start\"};\r\n    align-items: ${props.alignItems || \"flex-start\"};\r\n    position:${props.position ? props.position : \"fixed\"} ;\r\n    width: 100%;\r\n    height: ${props.viewheight ? props.viewheight : \"fixed\"};\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    background-color:${props.backgroundColor || \"rgba(0, 0, 0, 0.5)\"};\r\n    z-index: 9999;\r\n    cursor: pointer;\r\n`\r\n);\r\nconst spin = keyframes`\r\n0% { transform: rotate(0deg) }\r\n100% {transform: rotate(360deg) }\r\n`;\r\nconst Circle = styled.div`\r\n  border: 3px solid ${props => props.theme.primary};\r\n  border-top: 3px solid #fff;\r\n  border-radius: 50%;\r\n  margin: auto;\r\n  width: 60px;\r\n  height: 60px;\r\n  animation: ${spin} 0.6s linear infinite;\r\n  transition: 0.2s;\r\n`;\r\n\r\nfunction Overlay(props) {\r\n  const { position, direction, backgroundColor, viewheight } = props;\r\n  return (\r\n    <OverWrapper\r\n      position={position}\r\n      direction={direction}\r\n      backgroundColor={backgroundColor}\r\n      viewheight={viewheight}\r\n    >\r\n      <Circle />\r\n    </OverWrapper>\r\n  );\r\n}\r\n\r\nexport default Overlay;\r\n","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nexport var styles = function styles(theme) {\n  var elevations = {};\n  theme.shadows.forEach(function (shadow, index) {\n    elevations[\"elevation\".concat(index)] = {\n      boxShadow: shadow\n    };\n  });\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create('box-shadow')\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      border: \"1px solid \".concat(theme.palette.divider)\n    }\n  }, elevations);\n};\nvar Paper = /*#__PURE__*/React.forwardRef(function Paper(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$elevation = props.elevation,\n      elevation = _props$elevation === void 0 ? 1 : _props$elevation,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'elevation' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"square\", \"elevation\", \"variant\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, variant === 'outlined' ? classes.outlined : classes[\"elevation\".concat(elevation)], !square && classes.rounded),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Paper.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\r\n   * The content of the component.\r\n   */\n  children: PropTypes.node,\n\n  /**\r\n   * Override or extend the styles applied to the component.\r\n   * See [CSS API](#css) below for more details.\r\n   */\n  classes: PropTypes.object,\n\n  /**\r\n   * @ignore\r\n   */\n  className: PropTypes.string,\n\n  /**\r\n   * The component used for the root node.\r\n   * Either a string to use a HTML element or a component.\r\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\r\n   * Shadow depth, corresponds to `dp` in the spec.\r\n   * It accepts values between 0 and 24 inclusive.\r\n   */\n  elevation: chainPropTypes(PropTypes.number, function (props) {\n    var classes = props.classes,\n        elevation = props.elevation; // in case `withStyles` fails to inject we don't need this warning\n\n    if (classes === undefined) {\n      return null;\n    }\n\n    if (elevation != null && classes[\"elevation\".concat(elevation)] === undefined) {\n      return new Error(\"Material-UI: This elevation `\".concat(elevation, \"` is not implemented.\"));\n    }\n\n    return null;\n  }),\n\n  /**\r\n   * If `true`, rounded corners are disabled.\r\n   */\n  square: PropTypes.bool,\n\n  /**\r\n   * The variant to use.\r\n   */\n  variant: PropTypes.oneOf(['elevation', 'outlined'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiPaper'\n})(Paper);"],"sourceRoot":""}